<template>
    <a-drawer
            title="新增"
            :maskClosable="false"
            width=650
            placement="right"
            :closable="false"
            @close="onClose"
            :visible="addVisiable"
            style="height: calc(100% - 55px);overflow: auto;padding-bottom: 53px;">
        <a-form :form="form">
            #set ($nuType="Int,Decimal,Double,BigDecimal,Integer")
            #foreach($field in ${table.fields})
                #if(!$cfg.eliminateFileds.contains($field.name)  && !${field.keyFlag})
                <a-form-item v-bind="formItemLayout"
                    label="${field.comment}">
                    #if (${field.propertyType} =='Date'||${field.propertyType} =='LocalDate')
                        <a-date-picker v-decorator="[ '${field.propertyName}', {rules: [{ required: true, message: '${field.comment}不能为空' }] }]" />
                    #elseif (${field.propertyType} =='DateTime' ||${field.propertyType} =='LocalDateTime' )
                        <a-date-picker showTime format='YYYY-MM-DD HH:mm:ss' v-decorator="[ '${field.propertyName}', {rules: [{ required: true, message: '${field.comment}不能为空' }] }]" />
                    #elseif ($nuType.containsKey(${field.propertyType}))
                        <a-input-number v-decorator="[ '${field.propertyName}',{rules: [{ required: true, message: '${field.comment}不能为空' }] }]"/>
                    #else
                        <a-input placeholder="请输入${field.comment}" v-decorator="['${field.propertyName}', {rules: [{ required: true, message: '${field.comment}不能为空' }] }]" />
                    #end
                </a-form-item>
                    #end
            #end
        </a-form>
        <div class="drawer-bootom-button">
            <a-popconfirm title="确定放弃编辑？" @confirm="onClose" okText="确定" cancelText="取消">
                <a-button style="margin-right: .8rem">取消</a-button>
            </a-popconfirm>
            <a-button @click="handleSubmit" type="primary" :loading="loading">提交</a-button>
        </div>
    </a-drawer>
</template>
<script>
    const formItemLayout = {
        labelCol: { span: 3 },
        wrapperCol: { span: 18 }
    }
    export default {
        name: '${entity}Add',
        props: {
            addVisiable: {
                default: false
            }
        },
        data () {
            return {
                loading: false,
                formItemLayout,
                form: this.$form.createForm(this),
                ${table.entityPath}: {}
            }
        },
        methods: {
            reset () {
                this.loading = false
                this.${table.entityPath} = {}
                this.form.resetFields()
            },
            onClose () {
                this.reset()
                this.$emit('close')
            },
            handleSubmit () {
                this.form.validateFields((err, values) => {
                    if (!err) {
                    this.setFields()
                    this.$post('${table.entityPath}', {
                        ...this.${table.entityPath}
                    }).then(() => {
                        this.reset()
                        this.$emit('success')
                    }).catch(() => {
                        this.loading = false
                    })
                }
            })
            },
            setFields () {
                #set ($i=0)
                let values = this.form.getFieldsValue([#foreach($field in ${table.fields})
    #if(!$cfg.eliminateFileds.contains($field.name) && !${field.keyFlag})
                    #if($i==1) , #end
                    '${field.propertyName}'  #set ($i=1) #end
                #end
                ])
                if (typeof values !== 'undefined') {
                    Object.keys(values).forEach(_key => { this.${table.entityPath}[_key] = values[_key] })
                }
            }
        }
    }
</script>
